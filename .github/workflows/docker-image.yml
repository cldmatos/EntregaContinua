name: Build and Deploy to DockerHub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/atividade:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add SSH host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 201.23.3.86 >> ~/.ssh/known_hosts

    - name: Test SSH connection
      run: |
        ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 "echo 'SSH connection successful!'"

    - name: Deploy container to remote server
      run: |
        # Start Docker if not running
        ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 "docker info || sudo systemctl start docker"

        # Stop and remove any existing container with the same name
        ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 "docker stop atividade || true && docker rm atividade || true"

        # Pull the latest image from DockerHub and run the container
        ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/atividade:latest && \
          docker run -d -p 8085:8080 --name atividade ${{ secrets.DOCKERHUB_USERNAME }}/atividade:latest"

        # Verify the container is running
        ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 "docker ps | grep atividade || echo 'Container failed to start'"
